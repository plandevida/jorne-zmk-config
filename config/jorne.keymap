/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/rgb.h>

#define HOMEMODMAC 0
#define THUMBSMAC 1
#define QWERTY 2
#define NUMBERS 3
#define SYMBOLS 4
#define MOUSE 5
#define CONFIG 6
#define VALORANT 7
#define GAMING 8

/ {
        behaviors {
                hm: homerow_mod {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping_term_ms = <300>;
                        quick-tap-ms = <200>;
                        require-prior-idle-ms = <170>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
                cpx: copypastecut {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        tapping_term_ms = <300>;
                        quick-tap-ms = <200>;
                        require-prior-idle-ms = <170>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                homemodmac_layer {
                        label = "HMMAC";
// | TAB | CONFG |  Q     |    W   |    E   |    R   |  T  |             |  Y  |    U   |    I   |    O   |    P   |  [  |  ]  |
//       | NUM   | LSFT/A | LCTR/S | LALT/D | LCMD/F |  G  |             |  H  | RCMD/J | RALT/K | RCTR/L | RSFT/; |  '  |
//       | SYMBL |  Z     | CUT/X  | COPY/C | PSTE/V |  B  |             |  N  |    M   |   ,/<  |  ./>   |   /    |  \  |
//                                            | DEL | SPC | RET |  | RET | SPC | BKSP |
                        bindings = <
   &kp TAB &mo CONFIG  &kp Q        &kp W        &kp E        &kp R         &kp T  &kp Y &kp U       &kp I       &kp O       &kp P           &kp LBKT &kp RBKT
           &mo NUMBERS &hm LSHFT A  &hm LCTRL S  &hm LALT D   &hm LCMD F    &kp G  &kp H &hm RCMD J  &hm RALT K  &hm RCTRL L &hm RSHFT SEMI &kp SQT
           &mo SYMBOLS &kp Z        &cpx LG(X) X  &cpx LG(C) C  &cpx LG(V) V   &kp B  &kp N &kp M       &kp COMMA   &kp DOT     &kp FSLH        &kp BSLH
                                                         &kp DEL &kp SPACE &kp RET  &kp RET &kp SPACE &kp BSPC
                        >;
                };


                thumbsmac_layer {
                        label = "THUMBS";
// | LALT-TAB | CONFG |  Q     |    W   |    E   |    R   |  T  |             |  Y  |    U   |    I   |    O   |    P   |  [  |  RALT-]  |
//            | SYMBS |  A     |    S   |    D   |    F   |  G  |             |  H  |    J   |    K   |    L   |    ;   |  '  |
//            | NUMBS |  Z     |    X   |    C   |    V   |  B  |             |  N  |    M   |   ,/<  |  ./>   |   /    |  \  |
//                               | LCTRL-DEL | LSFT-SPC | LCMD-RET |      | RCMD-RET | RSTF-SPC | RCTRL-BKSP |
                        bindings = <
   &hm LALT TAB   &mo CONFIG    &kp Q    &kp W         &kp E         &kp R                       &kp T     &kp Y      &kp U      &kp I       &kp O       &kp P           &kp LBKT     &hm RALT RBKT
                  &mo SYMBOLS   &kp A    &kp S         &kp D         &kp F                       &kp G     &kp H      &kp J      &kp K       &kp L       &kp SEMI        &kp SQT
                  &mo NUMBERS   &kp Z    &cpx LG(X) X  &cpx LG(C) C  &cpx LG(V) V                &kp B     &kp N      &kp M      &kp COMMA   &kp DOT     &kp FSLH        &kp BSLH
                                        &hm LCTRL DEL   &hm LSHFT SPACE   &hm LCMD RET        &hm RCMD RET   &hm RSHFT SPACE   &hm RCTRL BSPC
                        >;
                };


                querty_layer {
                        label = "QWRTY";
// -----------------------------------------------------------------------------------------
// | GUI | TAB  |  Q  |  W  |  E  |  R  |  T  |               |  Y  |  U   |  I   |  O |  P  |  [   |  ]  |
//       | CTRL |  A  |  S  |  D  |  F  |  G  |               |  H  |  J   |  K   |  L |  ;  |CTRL/'|
//       | SHFT |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M   | ,/< | ./> |  /  |RALT/\|
//                      | MOUSE/DEL | NUM/SPC | RET |   | RET | NUM/SPC | BKSP |
                        bindings = <
   &kp LCMD &kp TAB   &kp Q &kp W &kp E &kp R &kp T &kp Y           &kp U  &kp I     &kp O   &kp P    &kp LBKT      &kp RBKT
            &kp LCTRL &kp A &kp S &kp D &kp F &kp G &kp H           &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N           &kp M  &kp COMMA &kp DOT &kp FSLH &mt RALT BSLH
                        &lt MOUSE DEL &lt NUMBERS SPACE &kp RET  &kp RET &lt NUMBERS SPACE &kp BSPC
                        >;
                };


                numbers_layer {
                        label = "NUMBR";
// -----------------------------------------------------------------------------------------
// | -v- | CONFG | LALT |  7  |  8  |  9  |  +  |   | PGUP| ___ |  UP | ___ | HOME| ___  | ESC |
//       | -v-   | SHFT |  4  |  5  |  6  |  =  |   | PGDN| LEFT| DOWN| RGHT| END | CAPS |
//       | -v-   | CTRL |  1  |  2  |  3  |  0  |   | ___ | ___ | ,/< | ./> |  /  | LCMD |
//                            | -v- | -v- | RET |   | RET | -v- | -v- |

                        bindings = <
   &trans &tog CONFIG &kp LALT   &kp N7 &kp N8 &kp N9 &kp KP_PLUS        &kp PG_UP &none    &kp UP    &none     &kp HOME  &none     &kp ESC
          &trans      &kp LSHFT  &kp N4 &kp N5 &kp N6 &kp EQUAL          &kp PG_DN &kp LEFT &kp DOWN  &kp RIGHT &kp END   &kp CAPS
          &trans      &kp LCTRL  &kp N1 &kp N2 &kp N3 &kp KP_N0          &none     &none    &kp COMMA &kp DOT   &kp FSLH  &kp LCMD
                                               &trans &trans &kp RET  &kp RET  &trans &trans
                        >;
                };


                symbols_layer {
                        label = "SYMBL";
// -----------------------------------------------------------------------------------------
// | -v- | CONFG |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  [  |  ]  |  GRAVE | ESC |
//       |  -v-  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |   -    |
//       |  -v-  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |   _    |
//                           | -v- | -v- | RET |   |MOUSE| -v- | -v- |

                        bindings = <
   &trans &tog CONFIG &kp F1   &kp F2 &kp F3   &kp F4   &kp F5            &kp F6    &kp F7   &kp F8   &kp LBKT &kp RBKT &kp GRAVE       &kp ESC
          &trans      &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT         &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &kp MINUS
          &trans      &kp N1   &kp N2 &kp N3   &kp N4   &kp N5            &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &kp UNDERSCORE
                                               &trans &trans &kp RET   &tog MOUSE    &trans &trans
                        >;
                };


                mouse_layer {
                        label = "MOUSE";
// -----------------------------------------------------------------------------------------
// | -v- | CONFG | ___ | ___ | ___ | ___ | ___ |   | SCRL_DOWN | SCRL_LEFT  |   MOVE_UP  | SCRL_RIGHT  | ___ | ___ | ___ |
//       |  -v-  | ___ | ___ | ___ | ___ | ___ |   |  SCRL_UP  | MOVE_LEFT  | MOVE_DOWN  | MOVE_RIGHT  | ___ | ___ |
//       |  -v-  | ___ | ___ | ___ | ___ | ___ |   | ___  | ___ | ___ | ___ | ___ | -v- |
//                           | -v- | -v- | LCLK |   |RCLK| -v- | -v- |

                        bindings = <
   &trans &tog CONFIG &none &none &none &none &none         &msc SCRL_DOWN &msc SCRL_LEFT &mmv MOVE_UP   &msc SCRL_RIGHT &none &none &none
          &trans      &none &none &none &none &none         &msc SCRL_UP   &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &none &none
          &trans      &none &none &none &none &none         &none &none          &none          &none           &none &none
                                &trans &trans &mkp LCLK    &mkp RCLK &trans &trans
                        >;
                };


                config_layer {
                        label = "CONFG";
// -----------------------------------------------------------------------------------------
// | -v- | -v- | HOMEMODMAC | NUMBERS |  SYMBOLS  |  MOUSE  | QWERTY  |   | EXT_POWER_ON_CMD | EXT_POWER_OFF_CMD | EXT_POWER_TOGGLE_CMD |         | ZMK_STUDIO |  BLDR   | RST |
//       | -v- |   GAMING   |   ___   | OUT_BLE   | OUT_TOG | OUT_USB |   |      RGB_ON      |      RGB_OFF      |       RGB_TOG        | RGB_SPI |   RGB_SPD  |  RGB_EFF |
//       | -v- |  VALORANT  | BT0     | BT1       | BT2     | BTCLR   |   |      BL_ON       |      BL_OFF       |       BL_TOG         | BL_INC  |   BL_DEC   |
//                               | -v-       | -v-     | -v-     |   | -v- | -v- | -v- |

                        bindings = <
   &trans &trans  &to HOMEMODMAC &to NUMBERS  &to SYMBOLS  &to MOUSE     &to QWERTY         &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &studio_unlock   &none            &bootloader      &sys_reset
          &trans  &to GAMING     &none        &out OUT_BLE &out OUT_USB  &out OUT_TOG       &rgb_ug RGB_ON    &rgb_ug RGB_OFF    &rgb_ug RGB_TOG    &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF
          &trans  &to VALORANT   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_CLR         &bl BL_ON         &bl BL_OFF         &bl BL_TOG         &bl BL_INC       &bl BL_DEC       &none
                                                                  &trans &trans &trans   &trans &trans &trans
                        >;
                };


                valorant_layer {
                        label = "VLRNT";
// -----------------------------------------------------------------------------------------
// | NUM | TAB  |  Q  |  W  |  E  |  R  |  T  |         |  Y  |  U   |  I  |  O  |  P  |  [  |  ]  |
//       | CTRL |  A  |  S  |  D  |  F  |  G  |         |  H  |  J   |  K  |  L  |  ;  |  '  |
//       | SHFT |  Z  |  X  |  C  |  V  |  B  |         |  N  |  M   |  ,  |  .  |  /  |  \  |
//                             |  M  | SPC |  V  |   | RET | NUM/SPC | BKSP |

                        bindings = <
   &tog NUMBERS &kp TAB   &kp Q &kp W &kp E &kp R &kp T &kp Y           &kp U  &kp I     &kp O   &kp P    &kp LBKT  &kp RBKT
                &kp LSHFT &kp A &kp S &kp D &kp F &kp G &kp H           &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N           &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                            &kp M &kp SPACE &kp V  &kp RET &lt NUMBERS SPACE &kp BSPC
                        >;
                };


                gaming_layer {
                        label = "GAMING";
// -----------------------------------------------------------------------------------------
// | NUM | TAB  |  Q  |  W  |  E  |  R  |  T  |         |  Y  |  U   |  I  |  O  |  P  |  [   |  ]  |
//       | CTRL |  A  |  S  |  D  |  F  |  G  |         |  H  |  J   |  K  |  L  |  ;  |  '  |
//       | SHFT |  Z  |  X  |  C  |  V  |  B  |         |  N  |  M   |  ,  |  .  |  /  |  \  |
//                             | BSPC| SPC | RET |   | RET |  NUM/SPC | BKSP |

                        bindings = <
   &tog NUMBERS &kp TAB   &kp Q &kp W &kp E &kp R &kp T &kp Y           &kp U  &kp I     &kp O   &kp P    &kp LBKT  &kp RBKT
                &kp LSHFT &kp A &kp S &kp D &kp F &kp G &kp H           &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N           &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                        &kp BSPC &kp SPACE &kp RET  &kp RET &lt NUMBERS SPACE &kp BSPC
                        >;
                };
        };
};
